name: Docker release

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag billbot2
      - name: Run tests inside container
        run: docker run -e RUNTIME_ENV='docker' -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} billbot2 pytest -p no:warnings

  koiprecheck:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: short sha
        id: shortsha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Precheck stage
        id: precheck
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.KOI_PRECHECK_URL }}
          method: "POST"
          bearerToken: ${{ secrets.BEARER_TOKEN }}
          contentType: "application/json"
          data: '{"commit_sha": "${{ steps.shortsha.outputs.sha_short }}", "commit_message": "${{ github.event.head_commit.message }}" }'
          timeout: 12000
      - name: Show response
        if: steps.precheck.outcome == 'success'
        run: |
          echo ${{ steps.precheck.outputs.response }}
          echo ${{ steps.precheck.outputs.headers }}

  release:
    runs-on: ubuntu-latest
    needs: [build, koiprecheck]
    steps:
      - uses: actions/checkout@v3
      - name: Merge dev to release
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: dev
          target_branch: docker-release
          github_token: ${{ github.token }}
